 int n = nums.length;

        Arrays.sort(nums);
        int[] dp = new int[n];
        Arrays.fill(dp, 1);
        int[] par = new int[n];
        Arrays.fill(par, -1);

        for (int i = 1; i < n; i++) {
            for (int j = 0; j < i; j++) {
                if (nums[i] % nums[j] == 0 && 1 + dp[j] > dp[i]) {
                    dp[i] = 1 + dp[j];
                    par[i] = j;
                }
            }
        }

        // find the starting point
        int startIndex = 0;
        for (int i = 1; i < n; i++) {
            if (dp[i] > dp[startIndex])
                startIndex = i;
        }

        List<Integer> ans = new ArrayList<>();
        while (startIndex != -1) {
            ans.add(nums[startIndex]);
            startIndex = par[startIndex];
        }

        Collections.reverse(ans);

        return ans;
